These are the switches that Draco needs to support

-b [target]				compile your program to run on target
-B[dir]					load compiler executables for dir instead of default location
-c					Compile.  (either -c or -S required)
-fno-inline				[Backend], no inline, must get passed to optimizer
-fno-inline-functions			no inline for -O3 mode, simple subprogs
-fno-inline-small-functions		no inline for -O2 mode, small subprogs
-fno-inline-functions-called-once	no inline for -01 mode, local once called subprogs
-fno-ivopts				no induction variable opt, -O1
-fno-strict-aliasing			Avoid assumptions regarding non-aliasing of objects
-fstack-check				Activates stack checking
-fstack-usage				Stack usage information available on per function basis
-fcallgraph-info			Callgraph info on program on per file basis
-g					Generate debugging information

== -gnat and -gant alias for "-drac" ==
-drac83				Enforce Ada83 restrictions
-drac95				Enforce Ada95 restrictions
-drac05				Allow full Ada 2005 features
-draca				Activate assertions and debug pragmas
-dracA				Ignore gnat.adc (draco.adc?) file
-dracb				Generate brief message to stderr inc. verbose
-dracB				Permit no invalid values
-dracc				Check syntax and semantics only (no code gen)
-dracC				Generate CodePeer info (.scil files)
-dracd				debug options for compiler (followed by string)
-dracD				create expanded source files for source level debugging
-dracec[=path]			specify configuration pragma file
-draceD[symbol][=value]		Defines a symbol for preprocessing
-dracef				Display full source path name in error msg
-draceG				Save result of preprocessing in a text file.
-dracem[=path]			Specify a mapping file
-draceS				Generate SCO (source coverage obligation)
-dracE				Full dynamic elaboration checks
-dracf				Full errors, don't supress cascaded errors
-dracF				Externals names are folded to all uppercase
-dracg				Internal GNAT implementation mode
-dracG[=nn]			List generated expanded code in source form
-drach				output usage info to stdout
-draci[c]			Identifier character set
-dracI				Ignore representation clauses
-dracjnn			Reformat error message to fit on nn char lines
-drack[=n]			limit file names to n characters 
-dracl				output full source listing with embedded error msgs
-dracL				used with dragG or dracD to put source as comments on expanded source output
-dracm[=n]			Limit error message to n, 0 means no limit
-dracn				[backend] Activate inlining for subprograms using pragma inline
-dracN				Activate front end inlining for pragma inline
-draco				Enable numeric overflow (no including division by zero)
-dracp				Suppress all checks
-dracP				Enable pragma polling
-dracq				Don't quit, try semantics even if parse errors
-dracQ				Don't quit, generate ALI and tree even if illegalities
-dracr				Treat pragma Restrictions as restricion_ warnings
-dracR[0/1/2/3[s]]		Output representation info for declared types and objects
-dracs				Syntax check only
-dracS				Print package Standard
-dract				Generate tree output file
-dracT[nnn]			All compiler tables start at nnn times using starting size
-dracu				List units for this compilation
-dracU				Tag all error message with unique string "error"
-dracv				Verbose mode, full error output with source line to stdout
-dracV				Control level of validaty checking
-dracw[xxx]			Warning mode where xxx denotes enabled or disabled
-dracWe				Wide character encoding method [e=n/h/u/s/e/8]
-dracx				Suppress generation of cross-reference information
-dracy				Enable built-in style checks
-dracz[m]			Distribute stub generation and compilation

-I[dir]				Direct Draco to search the dir directory for source files
-I-				Don't look in directory containing the source file (excepting source file)
-mbig-switch			larger offsets for case statements (for HP-UX)
-o [file]			specifies object file name (might confuse binder)
-nostdinc			Inhibit search of default location for draco RTL source files
-nostdlib			Inhibit search on default location for draco RTL ALI files
-O[n]				n controls the optimization level
-pass-exit-codes		catch exit codes from the compiler and use the most meaningful
--RTS[=rts-path]		specifies location of RTL, same as gnatmake flag
-S				generate assembler code
-fverbose-asm			Used with -S to add annotated with variable name
-v				Show commands generated by gcc driver
-V				Execute ver version of the compiler, draco version
-w				[backend] Turn off warnings, also same as dracws for frontend



Lang.opt
-I
-Wall
-Wmissing-prototypes
-Wwrite-strings
-Wlong-long
-Wvariadic-macros
-Wold-style-definition
-Wmissing-format-attribute
-Woverlength-strings
-nostdinc
-nostdlib
-feliminate-unused-debug-types
-fRTS-
-gdwarf+
-gnat_____
-gant_____
-gnatO

Lang.spec (mentions)
-pg & -fomit-frame-pointer
