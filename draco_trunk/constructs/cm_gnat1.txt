##
##  DRACO ADA COMPILER
##  CMAKE BUILD SCRIPT - GNAT1 COMPILER
##
##
##  Copyright (c) 2010, John Marino (www.auroraux.org)
##  All rights reserved.
##
##  Permission to use, copy, modify, and/or distribute this software for any
##  purpose with or without fee is hereby granted, provided that the above
##  copyright notice and this permission notice appear in all copies.
##
##  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
##  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
##  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
##  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
##  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
##  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
##  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
##



# The basic strategy here is to compile just the necessary files needed to
# build gnat1 and friends to get to the point of building the real-time
# library with the new gnat1 (and friends).  So we are going to build these
# common files twice per stage (up to 6 times for a full bootstrap)

# Languages-specific object files for Ada.
# Object files for gnat1 from C sources.
set (GNAT1_C_OBJS
      ada/b_gnat1.o
      ada/adadecode.o
      ada/adaint.o
      ada/cstreams.o
      ada/cio.o
      ada/targtyps.o
      ada/decl.o
      ada/misc.o
      ada/utils.o
      ada/utils2.o
      ada/trans.o
      ada/cuintp.o
      ada/argv.o
      ada/raise.o
      ada/init.o
      ada/tracebak.o
      ada/initialize.o
      ada/env.o
)


# Object files from Ada sources that are used by gnat1
set (GNAT_ADA_OBJS
      ada/a-charac.o
      ada/a-chlat1.o
      ada/a-elchha.o
      ada/a-except.o
      ada/a-ioexce.o
      ada/ada.o
      ada/ali.o
      ada/alloc.o
      ada/atree.o
      ada/butil.o
      ada/casing.o
      ada/checks.o
      ada/comperr.o
      ada/csets.o
      ada/cstand.o
      ada/debug.o
      ada/debug_a.o
      ada/einfo.o
      ada/elists.o
      ada/err_vars.o
      ada/errout.o
      ada/erroutc.o
      ada/eval_fat.o
      ada/exp_aggr.o
      ada/exp_atag.o
      ada/exp_attr.o
      ada/exp_cg.o
      ada/exp_ch11.o
      ada/exp_ch12.o
      ada/exp_ch13.o
      ada/exp_ch2.o
      ada/exp_ch3.o
      ada/exp_ch4.o
      ada/exp_ch5.o
      ada/exp_ch6.o
      ada/exp_ch7.o
      ada/exp_ch8.o
      ada/exp_ch9.o
      ada/exp_code.o
      ada/exp_dbug.o
      ada/exp_disp.o
      ada/exp_dist.o
      ada/exp_fixd.o
      ada/exp_imgv.o
      ada/exp_intr.o
      ada/exp_pakd.o
      ada/exp_prag.o
      ada/exp_sel.o
      ada/exp_smem.o
      ada/exp_strm.o
      ada/exp_tss.o
      ada/exp_util.o
      ada/exp_vfpt.o
      ada/expander.o
      ada/fmap.o
      ada/fname-uf.o
      ada/fname.o
      ada/freeze.o
      ada/frontend.o
      ada/g-byorma.o
      ada/g-hesora.o
      ada/g-htable.o
      ada/g-spchge.o
      ada/g-speche.o
      ada/g-u3spch.o
      ada/get_scos.o
      ada/get_targ.o
      ada/gnat.o
      ada/gnatvsn.o
      ada/hlo.o
      ada/hostparm.o
      ada/i-c.o
      ada/i-cstrea.o
      ada/impunit.o
      ada/inline.o
      ada/interfac.o
      ada/itypes.o
      ada/krunch.o
      ada/layout.o
      ada/lib-load.o
      ada/lib-util.o
      ada/lib-writ.o
      ada/lib-xref.o
      ada/lib.o
      ada/live.o
      ada/namet-sp.o
      ada/namet.o
      ada/nlists.o
      ada/nmake.o
      ada/opt.o
      ada/osint-c.o
      ada/osint.o
      ada/output.o
      ada/par.o
      ada/par_sco.o
      ada/prep.o
      ada/prepcomp.o
      ada/put_scos.o
      ada/repinfo.o
      ada/restrict.o
      ada/rident.o
      ada/rtsfind.o
      ada/s-addope.o
      ada/s-assert.o
      ada/s-bitops.o
      ada/s-carun8.o
      ada/s-casuti.o
      ada/s-conca2.o
      ada/s-conca3.o
      ada/s-conca4.o
      ada/s-conca5.o
      ada/s-conca6.o
      ada/s-conca7.o
      ada/s-conca8.o
      ada/s-conca9.o
      ada/s-crc32.o
      ada/s-crtl.o
      ada/s-except.o
      ada/s-exctab.o
      ada/s-htable.o
      ada/s-imenne.o
      ada/s-imgenu.o
      ada/s-mastop.o
      ada/s-memory.o
      ada/s-os_lib.o
      ada/s-parame.o
      ada/s-purexc.o
      ada/s-restri.o
      ada/s-secsta.o
      ada/s-soflin.o
      ada/s-sopco3.o
      ada/s-sopco4.o
      ada/s-sopco5.o
      ada/s-stache.o
      ada/s-stalib.o
      ada/s-stoele.o
      ada/s-strcom.o
      ada/s-strhas.o
      ada/s-string.o
      ada/s-strops.o
      ada/s-traceb.o
      ada/s-traent.o
      ada/s-unstyp.o
      ada/s-utf_32.o
      ada/s-wchcnv.o
      ada/s-wchcon.o
      ada/s-wchjis.o
      ada/scans.o
      ada/scil_ll.o
      ada/scn.o
      ada/scng.o
      ada/scos.o
      ada/sdefault.o
      ada/seh_init.o
      ada/sem.o
      ada/sem_aggr.o
      ada/sem_attr.o
      ada/sem_aux.o
      ada/sem_case.o
      ada/sem_cat.o
      ada/sem_ch10.o
      ada/sem_ch11.o
      ada/sem_ch12.o
      ada/sem_ch13.o
      ada/sem_ch2.o
      ada/sem_ch3.o
      ada/sem_ch4.o
      ada/sem_ch5.o
      ada/sem_ch6.o
      ada/sem_ch7.o
      ada/sem_ch8.o
      ada/sem_ch9.o
      ada/sem_disp.o
      ada/sem_dist.o
      ada/sem_elab.o
      ada/sem_elim.o
      ada/sem_eval.o
      ada/sem_intr.o
      ada/sem_mech.o
      ada/sem_prag.o
      ada/sem_res.o
      ada/sem_scil.o
      ada/sem_smem.o
      ada/sem_type.o
      ada/sem_util.o
      ada/sem_vfpt.o
      ada/sem_warn.o
      ada/sinfo-cn.o
      ada/sinfo.o
      ada/sinput-d.o
      ada/sinput-l.o
      ada/sinput.o
      ada/snames.o
      ada/sprint.o
      ada/stand.o
      ada/stringt.o
      ada/style.o
      ada/styleg.o
      ada/stylesw.o
      ada/switch-c.o
      ada/switch.o
      ada/system.o
      ada/table.o
      ada/targext.o
      ada/targparm.o
      ada/tbuild.o
      ada/tree_gen.o
      ada/tree_in.o
      ada/tree_io.o
      ada/treepr.o
      ada/treeprs.o
      ada/ttypef.o
      ada/ttypes.o
      ada/types.o
      ada/uintp.o
      ada/uname.o
      ada/urealp.o
      ada/usage.o
      ada/validsw.o
      ada/widechar.o
)



# Object files for gnat executables
set (GNAT1_ADA_OBJS  ${GNAT_ADA_OBJS} ada/back_end.o ada/gnat1drv.o)

# List of extra object files linked in with various programs.
set (EXTRA_GNAT1_OBJS prefix.o)

set (GNAT1_OBJS ${GNAT1_C_OBJS} ${GNAT1_ADA_OBJS} ${EXTRA_GNAT1_OBJS}



# for reference - delete
#gnat1$(exeext): $(TARGET_ADA_SRCS) $(GNAT1_OBJS) $(ADA_BACKEND) $(LIBDEPS)
#	$(GCC_LINK) -o $@ $(GNAT1_OBJS) $(ADA_BACKEND) $(LIBS) $(SYSLIBS) $(BACKENDLIBS) $(CFLAGS)



############## compile_and_mark_objects ##############
# This function is the major one.  It adds the object file dependencies to
# the driver_stage_x target, and it compiles each file to an object file.
# The bind and linking has to come at build time. (?)

function (xxxxcompile_and_mark_objects X ADA_COMPILER)

   set (ali_files "")

   foreach (encoded_name ${ordered_files})

      string (REPLACE ":" ";" test ${encoded_name})

      list (GET test 0 location)
      list (GET test 1 extension)
      list (GET test 2 basename)
      list (APPEND ali_files ${basename}.ali)

      if ("${location}" STREQUAL "R")
         set (srcfile ${DIR_DRIVER}/${basename}.${extension})
         set (incflag "-I${CMAKE_CURRENT_BINARY_DIR}")
      else ()
         set (srcfile ${basename}.${extension})
         set (incflag "-I-;-I${DIR_DRIVER}")
      endif ()

      add_custom_command (
         OUTPUT ${basename}.o ${basename}.ali
         COMMAND ${ADA_COMPILER} ${incflag} -c ${srcfile}
         DEPENDS ${srcfile}
      )

   endforeach()

   add_custom_command (
      OUTPUT b~draco.ads b~draco.adb
      COMMAND ${TOOL_BIND} -x draco.ali
      DEPENDS ${ali_files}
   )

   add_custom_command (
      OUTPUT draco
      COMMAND ${TOOL_LINK} draco.ali -o ${execloc}
      DEPENDS b~draco.ads b~draco.adb
   )

endfunction (xxxxcompile_and_mark_objects)







# these are the base file names for the .adb files that make up
# the driver.  All have specification files except the
# main "draco.adb" file and dracosystemspecs.ads has no body.


#set (ordered_files
#      R:adb:dracosystem
#      L:ads:dracosystemspecs
#      R:adb:pathinfo
#      R:adb:pipemechanism
#      R:adb:switchmap
#      R:adb:driverswitch
#      R:adb:commands
#      R:adb:draco
#)




if (${CURRENT_STAGE} EQUAL 1)

   set (pass_compiler ${EXTERNAL_ADA_COMPILER})
   set (pass_binder   ${TOOL_BIND})
   set (pass_linker   ${TOOL_LINK})
   set (pass_cc       ${CMAKE_C_COMPILER})
   set (execloc       ${DIR_STAGE_1}/sysroot/libexec/draco-${DRACO_VERSION}/gnat1)
   add_custom_target (gnat1_stage1 DEPENDS gnat1)
   add_dependencies  (draco_stage1 gnat1_stage1)

elseif (${CURRENT_STAGE} EQUAL 2)

   # for standard and bootstrap profile, the system C compiler with system
   # as/linker is used.  For the cross profile, the system C compiler is
   # used with the foreign as/linker.  For the Xeno profile, we've got to
   # use an external C cross compiler.

   set (pass_compiler ${DIR_STAGE_1}/sysroot/bin/draco)
   set (pass_binder   ${DIR_STAGE_1}/sysroot/bin/gnatbind)
   set (pass_linker   ${DIR_STAGE_1}/sysroot/bin/gnatlink)

   if ("${profile}" STREQUAL "xeno")
      set (pass_cc       ${c_cross})
   else ()
      set (pass_cc       ${CMAKE_C_COMPILER})
   endif ()

   set (execloc       ${DIR_STAGE_2}/sysroot/libexec/draco-${DRACO_VERSION}/gnat1)
   add_custom_target (gnat1_stage2 DEPENDS gnat1)
   add_dependencies  (draco_stage2 gnat1_stage2)

else (${CURRENT_STAGE} EQUAL 3)

   # only the bootstrap profile gets to stage 3 so system C compiler is fine
   set (pass_compiler ${DIR_STAGE_2}/sysroot/bin/draco)
   set (pass_binder   ${DIR_STAGE_2}/sysroot/bin/gnatbind)
   set (pass_linker   ${DIR_STAGE_2}/sysroot/bin/gnatlink)
   set (pass_cc       ${CMAKE_C_COMPILER})
   set (execloc       ${DIR_STAGE_3}/sysroot/libexec/draco-${DRACO_VERSION}/gnat1)
   add_custom_target (gnat1_stage3 DEPENDS gnat1)
   add_dependencies  (draco_stage3 gnat1_stage3)

endif ()


#compile_and_mark_objects ()



