##
##  DRACO ADA COMPILER
##  CMAKE BUILD SCRIPT - STATIC LIBRARY LIBGCGOV
##
##
##  Copyright (c) 2010, John Marino (www.auroraux.org)
##  All rights reserved.
##
##  Permission to use, copy, modify, and/or distribute this software for any
##  purpose with or without fee is hereby granted, provided that the above
##  copyright notice and this permission notice appear in all copies.
##
##  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
##  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
##  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
##  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
##  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
##  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
##  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
##





# Macro definitions.  These are same for native and xeno
set (task_macros
   -DIN_GCC
   -DIN_LIBGCC2
   -D__GCC_FLOAT_NOT_NEEDED
   ${GTHREAD_FLAGS}
)


# Compiler flags.  Target values are constant,
# even between native and xeno builds (only host and compiler varies)
set (task_flags
   -O2
   ${CFLAGS_FOR_TARGET}
   ${LOOSE_WARN}
   ${C_LOOSE_WARN}
   -Wold-style-definition
   ${TARGET_LIBGCC2_CFLAGS}
   -g
)


# defined include directories.  The c_objects needed to be removed later
# for cross-compiler profiles
include_directories (
   ${DIR_REMNANTS}/include
   ${DIR_REMNANTS}/gcc
   ${DIR_HEADERS}
)


# base directory for gcc files
set (base ${DIR_REMNANTS}/gcc)


set (libgcov_functions
   -DL_gcov
   -DL_gcov_merge_add
   -DL_gcov_merge_single
   -DL_gcov_merge_delta
   -DL_gcov_fork
   -DL_gcov_execl
   -DL_gcov_execlp
   -DL_gcov_execle
   -DL_gcov_execv
   -DL_gcov_execvp
   -DL_gcov_execve
   -DL_gcov_interval_profiler
   -DL_gcov_pow2_profiler
   -DL_gcov_one_value_profiler
   -DL_gcov_indirect_call_profiler
   -DL_gcov_average_profiler
   -DL_gcov_ior_profiler
   -DL_gcov_merge_ior
)

add_executable (generator ${base}/gcov-iov.c)
string (STRIP "${BASEVER}" S_BASEVER)
string (STRIP "${DEVPHASE}" S_DEVPHASE)

set (outfile ${DIR_HEADERS}/gcov-iov.h)
add_custom_command (
   OUTPUT ${outfile}
   COMMAND generator '${S_BASEVER}' '${S_DEVPHASE}' > ${outfile}
   DEPENDS generator ${base}/gcov-iov.c
)

add_definitions  (${task_macros} ${task_flags} ${libgcov_functions})
add_library      (gcov STATIC ${base}/libgcov.c ${outfile})



