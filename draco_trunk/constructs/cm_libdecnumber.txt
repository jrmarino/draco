##
##  DRACO ADA COMPILER
##  CMAKE BUILD SCRIPT - STATIC LIBRARY LIBDECNUMBER
##
##
##  Copyright (c) 2010, John Marino (www.auroraux.org)
##  All rights reserved.
##
##  Permission to use, copy, modify, and/or distribute this software for any
##  purpose with or without fee is hereby granted, provided that the above
##  copyright notice and this permission notice appear in all copies.
##
##  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
##  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
##  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
##  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
##  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
##  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
##  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
##





# Compiler flags.
set (task_flags
   -g
   -fkeep-inline-functions
   -W
   -Wall
   -Wwrite-strings
   -Wmissing-format-attribute
   -Wstrict-prototypes
   -Wmissing-prototypes
   -Wold-style-definition
   -Wc++-compat
   -pedantic
   -Wno-long-long
)


# defined include directories.  The c_objects needed to be removed later
# for cross-compiler profiles
set (local_incs
   ../host_headers
   ${DIR_REMNANTS}/gcc
   ${DIR_REMNANTS}/include
   ${DIR_REMNANTS}/libdecnumber/include
)



# required objects for libiberty (there are more, these are only the
# ones that are required at a minimum according to the makefile.

set (components
   decContext
   decNumber
   dpd/decimal32.o
   dpd/decimal64.o
   dpd/decimal128.o
)

# convert the list above to full path source
#set (component_source_files "")
foreach (component ${components})
   list (APPEND component_source_files
                ${DIR_REMNANTS}/libdecnumber/${component}.c)
endforeach ()



# relative sysroot/lib location
set (syslib ../sysroot/lib/draco-${DRACO_VERSION})

#add_definitions  (${task_flags})


set (fullpath ${CMAKE_CURRENT_BINARY_DIR})
draco_add_library (decnumber ${fullpath} "${component_source_files}" "${local_incs}" "${task_flags}")
add_custom_target (decnum_sub${CURRENT_STAGE} DEPENDS ${fullpath}/libdecnumber.a)
add_dependencies  (library_decnum_s${CURRENT_STAGE} decnum_sub${CURRENT_STAGE})




